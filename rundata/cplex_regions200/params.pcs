barrier_limits_growth [1, 1000000000000000] [1000000000000]l #BARGROWTH.
barrier_algorithm {0,1,2,3}[0] # BARALG 
barrier_crossover {-1,0,1,2}[0] # BARCROSSALG
barrier_limits_corrections [-1,65535][-1]i # BARMAXCOR
barrier_ordering {0,1,2,3} [0] # BARORDER
barrier_startalg {1,2,3,4}[1] # BARSTARTALG

emphasis_memory {no}[no] #MEMORYEMPHASIS.
emphasis_mip {0,1,2,3,4}[0] # MIPEMPHASIS
emphasis_numerical {yes,no}[no] # NUMERICALEMPHASIS

feasopt_mode {0,1,2,3,4,5}[0] # FEASOPTMODE
lpmethod {0,1,2,3,4,5,6}[0] # LPMETHOD

mip_cuts_cliques {-1,0,1,2,3}[0] # CLIQUES
mip_cuts_covers {-1,0,1,2,3}[0] # COVERS
mip_cuts_disjunctive {-1,0,1,2,3}[0] # DISJCUTS
mip_cuts_flowcovers {-1,0,1,2}[0] # FLOWCOVERS
mip_cuts_gomory {-1,0,1,2}[0] # FRACCUTS
mip_cuts_gubcovers {-1,0,1,2}[0] # GUBCOVERS
mip_cuts_implied {-1,0,1,2}[0] # IMPLBD
mip_cuts_mcfcut {-1,0,1,2}[0] # MCFCUTS
mip_cuts_mircut {-1,0,1,2}[0] # MIRCUTS
mip_cuts_pathcut {-1,0,1,2}[0] # FLOWPATHS
mip_cuts_zerohalfcut {-1,0,1,2} [0] # ZEROHALFCUTS

mip_limits_aggforcut [0,65535][3]i #AGGCUTLIM. 
mip_limits_cutsfactor [1,65535][4]l #CUTSFACTOR.
mip_limits_cutpasses [-1,65535][0]i # CUTPASS.
mip_limits_gomorycand [1,65535][200]il #FRACCAND.
mip_limits_gomorypass [0,65535][0]i # FRACPASS
mip_limits_strongcand [1,65535][10]il #STRONGCANDLIM.
mip_limits_strongit [0,65535][0]i # STRONGITLIM
mip_limits_submipnodelim [1,65535][500]il #SUBMIPNODELIM

mip_ordertype {0,1,2,3}[0] # MIPORDTYPE

mip_strategy_backtrack [0.0,1.0][0.9999] # BTTOL
mip_strategy_bbinterval [1,65535][7]il #BBINTERVAL.
mip_strategy_branch {-1,0,1} [0] # BRDIR
mip_strategy_dive {0,1,2,3}[0] # DIVETYPE
mip_strategy_file {0,1}[1] # NODEFILEIND
mip_strategy_fpheur {-1,0,1,2}[0] # FPHEUR
mip_strategy_heuristicfreq [-1,65535][0] # HEURFREQ
mip_strategy_lbheur {yes,no}[no] # LBHEUR
mip_strategy_nodeselect {0,1,2,3}[1] # NODESEL
mip_strategy_order {yes,no}[yes] # MIPORDIND
mip_strategy_presolvenode {-1,0,1,2,3}[0] # PRESLVND 
mip_strategy_probe {-1,0,1,2,3}[0] # PROBE
mip_strategy_rinsheur [-1,65535][0]i # RINSHEUR
mip_strategy_search {0,1,2} [0] # MIPSEARCH
mip_strategy_startalgorithm {0,1,2,3,4,5,6}[0] # MIP starting algorithm. Auto, cat. SPECIAL CASES: MIQCP and MIQP only allow some of these
mip_strategy_subalgorithm {0,1,2,3,4,5}[0] # SUBALG
mip_strategy_variableselect {-1,0,1,2,3,4} [0] # VARSEL

network_netfind {1,2,3}[2] # NETFIND
network_pricing {0,1,2}[0] # NETPPRIIND
perturbation_constant [0.00000001, 1.0][0.000001]l # EPPER

preprocessing_aggregator [-1,65535][-1]i # AGGIND
preprocessing_boundstrength {-1,0,1}[-1] # BNDSTRENIND
preprocessing_coeffreduce {-1,0,1,2,3} [-1] # COEREDIND 
preprocessing_dependency {-1,0,1,2,3}[-1] # DEPIND
preprocessing_dual {-1,0,1}[0] # PREDUAL
preprocessing_fill [1,65535][10]il #AGGFILL. 
preprocessing_linear {0,1}[1] # PRELINEAR
preprocessing_numpass [-1,65535][-1]i # PREPASS 
preprocessing_reduce {0,1,2,3}[3] # REDUCE
preprocessing_relax {-1,0,1}[-1] # RELAXPREIND
preprocessing_repeatpresolve {-1,0,1,2,3}[-1] # REPEATPRESOLVE
preprocessing_symmetry {-1,0,1,2,3,4,5} [-1] # SYMMETRY

read_scale {-1,0,1}[0] # SCAIND
sifting_algorithm {0,1,2,3,4}[0] # SIFTALG

simplex_crash {-1,0,1}[1] # CRAIND
simplex_dgradient {0,1,2,3,4,5}[0] # DPRIIND
simplex_limits_perturbation [0,65535][0]i # PERLIM 
simplex_limits_singularity [1,65535][10]il #SINGLIM
simplex_perturbation_switch {no,yes}[no] # PERIND
simplex_pgradient {-1,0,1,2,3,4}[0] # PPRIIND
simplex_pricing [0,65535][0]i # PRICELIM
simplex_refactor [0,10000][0] # REINV
simplex_tolerances_markowitz [0.0001,0.9999][0.01]l # EPMRK

Conditionals:
mip_limits_strongcand | mip_strategy_variableselect in {3}
mip_limits_strongit | mip_strategy_variableselect in {3}
mip_strategy_order | mip_ordertype in {1,2,3}
perturbation_constant | simplex_perturbation_switch in {yes}

# *1 [2011-07-18] bbinterval (was [0.01,30][7]il). N_0+ 0=NEVER, 1=ALWAYS, ... 7=SOMETIMES(default) ... INF=NEVER.
